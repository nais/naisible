- name: Ensure PKI directory exists
  file:
    state: directory
    path: target/pki/

- name: Ensure master directory exists
  file:
    state: directory
    path: target/pki

- name: Ensure worker directory exists
  file:
    state: directory
    path: target/pki/worker

- name: Generate ca-csr.json
  template:
    src: "{{ role_path }}/templates/ca-csr.j2"
    dest: target/pki/ca-csr.json

- name: Generate etcd.json
  template:
    src: "{{ role_path }}/templates/etcd-csr.j2"
    dest: target/pki/etcd-csr.json

- name: Generate kube-apiserver-csr.json
  template:
    src: "{{ role_path }}/templates/kube-apiserver-server-csr.j2"
    dest: target/pki/kube-apiserver-server-csr.json

- name: Copy ca-config.json
  copy:
    src: "{{ role_path }}/files/ca-config.json"
    dest: target/pki/ca-config.json

- name: Initializing the CA
  shell: bin/cfssl gencert -initca target/pki/ca-csr.json | bin/cfssljson -bare target/pki/ca
  args:
    creates: target/pki/ca.pem

- name: Creating admin certificate
  shell: "bin/cfssl gencert -ca=target/pki/ca.pem -ca-key=target/pki/ca-key.pem -config=target/pki/ca-config.json -profile=client {{ role_path }}/files/admin-csr.json | bin/cfssljson -bare target/pki/admin"
  args:
    creates: target/pki/admin.pem

- name: Creating etcd certificate
  shell: bin/cfssl gencert -ca=target/pki/ca.pem -ca-key=target/pki/ca-key.pem -config=target/pki/ca-config.json -profile=server target/pki/etcd-csr.json | bin/cfssljson -bare target/pki/etcd
  args:
    creates: target/pki/etcd.pem

- name: Creating etcd certificate
  shell: bin/cfssl gencert -ca=target/pki/ca.pem -ca-key=target/pki/ca-key.pem -config=target/pki/ca-config.json -profile=client target/pki/etcd-csr.json | bin/cfssljson -bare target/pki/etcd-client
  args:
    creates: target/pki/etcd-client.pem

- name: Creating kube apiserver certificate
  shell: bin/cfssl gencert -ca=target/pki/ca.pem -ca-key=target/pki/ca-key.pem -config=target/pki/ca-config.json -profile=server target/pki/kube-apiserver-server-csr.json | bin/cfssljson -bare target/pki/kube-apiserver-server
  args:
    creates: target/pki/kube-apiserver-server.pem

- name: Creating traefik certificate
  shell: "bin/cfssl gencert -ca=target/pki/ca.pem -ca-key=target/pki/ca-key.pem -config=target/pki/ca-config.json -profile=server {{ role_path }}/files/traefik-csr.json | bin/cfssljson -bare target/pki/traefik"
  args:
    creates: target/pki/traefik.pem

- name: Creating service account keypair
  shell: /usr/bin/openssl genrsa -out sa.key 2048 && /usr/bin/openssl rsa -pubout -in sa.key -out sa.pub
  args:
    chdir: target/pki
    creates: sa.pub
