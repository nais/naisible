global:
  scrape_interval: 1m
  scrape_timeout: 59s
  evaluation_interval: 1m

alerting:
  alertmanagers:
  - path_prefix:
    scheme: https
    static_configs:
    - targets:
      - '{{ prometheus_alertmanager }}'
    tls_config:
      insecure_skip_verify: true

rule_files:
  - /opt/prometheus/alerts.yml

scrape_configs:
  - job_name: 'prometheus-local'
    static_configs:
    - targets: ['localhost:9090']

  - job_name: 'nodes'
    scrape_interval: 5s
    static_configs:
      - targets:
{% for host in groups['prometheus'] %}
        - '{{ host }}:9101'
{% endfor %}
        labels:
          node_type: prometheus
      - targets:
{% for host in groups['masters'] %}
        - '{{ host }}:9101'
{% endfor %}
        labels:
          node_type: master
      - targets:
{% for host in groups['workers'] %}
{% if not host in groups['ceph_nodes'] | intersect(groups['ceph_daemon_nodes']) %}
        - '{{ host }}:9101'
{% endif %}
{% endfor %}
        labels:
          node_type: worker
      - targets:
{% for host in groups['ceph_nodes'] | intersect(groups['ceph_daemon_nodes']) %}
        - '{{ host }}:9101'
{% endfor %}
        labels:
          node_type: storage
      - targets:
{% for host in groups['etcd'] %}
        - '{{ host }}:9101'
{% endfor %}
        labels:
          node_type: etcd

# Split federation of kubernetes-pods jobs to reduce the amount of timeseries in a single request
# Scrape traefik pods directly

  - job_name: "kubernetes-pods-a-m"
    honor_labels: true
    metrics_path: '/federate'
    params:
      'match[]':
        - '{job="kubernetes-pods",kubernetes_namespace=~"[a-m].*",kubernetes_namespace!~"kube-system|{{ prometheus_nais_namespaces|join('|') }}"}'
    scheme: https
    tls_config:
      insecure_skip_verify: true
    static_configs:
      - targets:
        - '{{ cluster_prometheus_host }}'

  - job_name: "kubernetes-pods-n-z"
    honor_labels: true
    metrics_path: '/federate'
    params:
      'match[]':
        - '{job="kubernetes-pods",kubernetes_namespace=~"[n-z].*",kubernetes_namespace!~"kube-system|{{ prometheus_nais_namespaces|join('|') }}"}'
    scheme: https
    tls_config:
      insecure_skip_verify: true
    static_configs:
      - targets:
        - '{{ cluster_prometheus_host }}'

  - job_name: "kubernetes-pods-kube-system"
    honor_labels: true
    metrics_path: '/federate'
    params:
      'match[]':
        - '{job="kubernetes-pods",kubernetes_namespace="kube-system",name!="traefik-ingress-lb"}'
    scheme: https
    tls_config:
      insecure_skip_verify: true
    static_configs:
      - targets:
        - '{{ cluster_prometheus_host }}'

  - job_name: 'kubernetes-pods-traefik'
    static_configs:
      - targets:
{% for host in groups['workers'] %}
{% if not host in groups['ceph_nodes'] | intersect(groups['ceph_daemon_nodes']) %}
        - '{{ host }}:8080'
{% endif %}
{% endfor %}

{% for namespace in prometheus_nais_namespaces %}
  - job_name: "kubernetes-pods-{{ namespace }}"
    honor_labels: true
    metrics_path: '/federate'
    params:
      'match[]':
        - '{job="kubernetes-pods",kubernetes_namespace="{{ namespace }}",name!="traefik-ingress-lb"}'
    scheme: https
    tls_config:
      insecure_skip_verify: true
    static_configs:
      - targets:
        - '{{ cluster_prometheus_host }}'
{% endfor %}

{% for job in prometheus_jobs %}
  - job_name: "{{ job }}"
    honor_labels: true
    metrics_path: '/federate'
    params:
      'match[]':
        - '{job="{{ job }}"}'
    scheme: https
    tls_config:
      insecure_skip_verify: true
    static_configs:
      - targets:
        - '{{ cluster_prometheus_host }}'
{% endfor %}

{% if cluster_scrape_jobs is defined %}
{% for job in cluster_scrape_jobs %}
  - job_name: "{{ job }}"
    honor_labels: true
    metrics_path: '/federate'
    params:
      'match[]':
        - '{job="{{ job }}"}'
    scheme: https
    tls_config:
      insecure_skip_verify: true
    static_configs:
      - targets:
        - 'prometheus.nais.{{ domain }}'
{% endfor %}
{% endif %}

{% if consul_servers is defined %}
  - job_name: "consul-servers"
    honor_labels: true
    metrics_path: '/metrics'
    scheme: http
    static_configs:
      - targets:
{% for host in consul_servers %}
        - '{{ host }}:9102'
{% endfor %}
{% endif %}
