{% set etcd_urls = [] -%}
{% for host in groups['etcd'] -%}
  {% set ip = hostvars[host]['ansible_default_ipv4']['address'] -%}
  {% set _ = etcd_urls.append("https://%s:2379" % (ip)) -%}
{% endfor -%}
{% set worker_ips = [] -%}
{% for host in groups['workers'] -%}
  {% set ip_address = hostvars[host]['ansible_default_ipv4']['address'] -%}
  {% set _ = worker_ips.append(ip_address) -%}
{% endfor -%}
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    component: kube-apiserver
    tier: control-plane
  annotations:
    nais.io/logformat: glog
  name: kube-apiserver
  namespace: kube-system
spec:
  containers:
  - command:
    - kube-apiserver
    - --allow-privileged=true
    - --audit-policy-file=/etc/kubernetes/kube-apiserver-audit-policy.yaml
    - --audit-log-path=-
    - --audit-log-format=json
    - --kubelet-client-certificate=/etc/kubernetes/pki/admin.pem
    - --kubelet-client-key=/etc/kubernetes/pki/admin-key.pem
    - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
    - --tls-cert-file=/etc/kubernetes/pki/kube-apiserver-server.pem
    - --tls-private-key-file=/etc/kubernetes/pki/kube-apiserver-server-key.pem
    - --secure-port=6443
    - --enable-bootstrap-token-auth 
    - --storage-backend=etcd3
    - --service-cluster-ip-range={{ service_cidr }}
    - --service-account-key-file=/etc/kubernetes/pki/sa.pub
    - --client-ca-file=/etc/kubernetes/pki/ca.pem
    - --insecure-port=8080
    - --insecure-bind-address=127.0.0.1
    - --enable-admission-plugins=PodSecurityPolicy,NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota
    - --authorization-mode=Node,RBAC
{% if oidc_issuer_url is defined %}
    - --oidc-issuer-url={{ oidc_issuer_url }}
    - --oidc-client-id={{ oidc_client_id }}
    - --oidc-username-claim={{ oidc_username_claim }}
    - --oidc-groups-claim={{ oidc_groups_claim }}
    - --v={{ log_level|default(0) }}
{% endif %}
    - --advertise-address={{ ansible_default_ipv4.address }}
    - --etcd-servers={{ etcd_urls | join(",") }}
    - --etcd-cafile=/etc/kubernetes/pki/ca.pem
    - --etcd-certfile=/etc/kubernetes/pki/etcd.pem
    - --etcd-keyfile=/etc/kubernetes/pki/etcd-key.pem
    image: gcr.io/google_containers/kube-apiserver-amd64:v{{ k8s_version }}
    livenessProbe:
      failureThreshold: 8
      httpGet:
        host: 127.0.0.1
        path: /healthz
        port: 6443
        scheme: HTTPS
      initialDelaySeconds: 15
      timeoutSeconds: 15
    name: kube-apiserver
    resources:
      requests:
        cpu: 250m
    volumeMounts:
    - mountPath: /etc/kubernetes/
      name: k8s
      readOnly: true
    - mountPath: /etc/ssl/certs
      name: certs
    - mountPath: /etc/pki
      name: pki
    env:
    - name: https_proxy
      value: {{ proxy_env.https_proxy }}
    - name: http_proxy
      value: {{ proxy_env.http_proxy }}
{% if nais_no_proxy is defined %}
    - name: no_proxy
      value: localhost,127.0.0.1,.local,.svc,{{ proxy_env.no_proxy }},{{ worker_ips | join(",") }} 
{% endif %}

  hostNetwork: true
  volumes:
  - hostPath:
      path: /etc/kubernetes
    name: k8s
  - hostPath:
      path: /etc/ssl/certs
    name: certs
  - hostPath:
      path: /etc/pki
    name: pki

status: {}
