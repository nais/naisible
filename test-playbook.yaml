---

- hosts: etcd
  user: "{{ remote_user }}"
  become: yes
  tasks:
  - name: Ensure required processes is running
    shell: /bin/pgrep etcd | wc -l
    register: etcd_process_count
    failed_when: etcd_process_count.stdout != "1"
    changed_when: false

  - name: Ensure cluster is healthy
    shell: "{{ install_dir }}/bin/etcdctl cluster-health | tail -n1"
    environment:
      - ETCDCTL_CERT_FILE: /etc/etcd/certs/etcd.pem
      - ETCDCTL_KEY_FILE: /etc/etcd/certs/etcd-key.pem
      - ETCDCTL_CA_FILE: /etc/etcd/certs/ca.pem
    register: etcd_health_status
    failed_when: etcd_health_status.stdout != "cluster is healthy"
    changed_when: false


- hosts: masters
  user: "{{ remote_user }}"
  become: yes
  vars:
    K8S_HOST_COUNT: "{{ (groups['workers'] | length) + (groups['masters'] | length) }}"
  tasks:
    - name: Ensure required processes is running
      shell: /bin/pgrep {{ item }} | wc -l
      loop:
        - dockerd
        - kubelet
      register: process_count
      failed_when: process_count.stdout != "1"
      changed_when: false

    - name: Ensure docker interfaces is present
      command: ip link show docker0
      changed_when: false

    - name: Ensure all kubernetes components are healthy
      command: "{{ install_dir }}/bin/kubectl get componentstatuses"
      register: componentstatuses
      failed_when: "'Unhealthy' in componentstatuses.stdout"
      changed_when: false

    - name: Verify that all nodes are in Ready-state
      shell: "{{ install_dir }}/bin/kubectl get nodes | grep -iw 'Ready' | wc -l"
      register: ready_count
      failed_when: ready_count.stdout != "{{ K8S_HOST_COUNT }}"
      changed_when: false

    - name: Ensure addons are deployed and available
      shell: "{{ install_dir }}/bin/kubectl -n kube-system get deploy {{ item }} -o json | grep availableReplicas | grep -v 0 | wc -l"
      loop:
        - coredns
        - tiller-deploy
        - heapster
        - monitoring-influxdb
      register: matches_spec
      retries: 6
      delay: 9
      until: matches_spec.stdout == "1"
      changed_when: false

- hosts: workers
  user: "{{ remote_user }}"
  become: yes
  tasks:
    - name: Ensure required processes is running
      shell: /bin/pgrep {{ item }} | wc -l
      loop:
        - dockerd
        - kubelet
        - flanneld
        - kube-proxy
      register: process_count
      failed_when: process_count.stdout != "1"
      changed_when: false

    - name: Ensure required interfaces is present
      command: ip link show {{ item }}
      loop:
        - docker0
        - flannel.1
      changed_when: false

- hosts: all
  user: "{{ remote_user }}"
  become: yes

  tasks:

    - name: Ensure node taints are set
      shell: "{{ install_dir }}/bin/kubectl --kubeconfig=/etc/kubernetes/kubeconfigs/cluster-admin.conf describe no  {{ inventory_hostname }} | grep '{{ item }}$' | wc -l "
      loop: "{{ node_taints|default([]) }}"
      register: matches_spec
      failed_when: matches_spec.stdout != "1"
      changed_when: false

    - name: Ensure node labels are set
      shell: "{{ install_dir }}/bin/kubectl --kubeconfig=/etc/kubernetes/kubeconfigs/cluster-admin.conf describe no  {{ inventory_hostname }} | grep '{{ item }}$' | wc -l"
      loop: "{{ node_labels|default([]) }}"
      register: matches_spec
      failed_when: matches_spec.stdout != "1"
      changed_when: false
